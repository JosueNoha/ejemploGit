**Ramas**:
- Herramienta de git para tener diferentes flujos de trabajo y luego fucionarlos.
- Las ramas se crean copiando un commit anterior (checkout) para luego generar un nuevo flujo sobre este.
- Fucionar dos ramas (merge) puede generar conflictos: diferencias entre ambos archivos.
- Algunas ramas usuales son:
hotfix: rama de solucion de errores
development: rama de experimentos


Comandos git:
**git init**: crea repositorio en carpeta actual: .git/
**git status**: ver estado del proyecto
**git add** <nombrearchivo> envia archivo a staging (nota: usando . puedes mandar toda la carpeta a staging)
**git rm --cached <nombrearchivo>** remueve el archivo de staging
**git commit -m <mensaje**>: envia el staging a repositorio con el mensaje
**git config**: configuraciones de git
		**-- list:** lista configuraciones basicas de git
			  **--show-origin** : ubicacion de las configuraciones
		**-- global user.name <nombre>** cambiar nombre del usuario
		**-- global user.email <email>** cambiar email del usuario
**git log <nombre archivo>**: historial de commits del archivo

Nota
 - para letras de acceso rapido a un comando
 -- para palabras comando


 Comandos:
git show <archivo>: muestra los ultimos cambios en archivo
git diff <indicador1> <indicador2>: muestra cambios entre los commits indicados; considera indicador2 como el mas reciente

Nota: commit sin mensaje: abre un editor VIM

Comandos:
git reset <indicador> --soft/--hard: regresamos al commit guardado en indicador; soft: solo disco duro, staging se mantiene igual; hard: regresetea todo
git diff: conpara staging con disco duro
git log --stat: vista de cambios especificos en cada commit
git checkout <identificador/rama> <archivo> trae el archivo guardado en identificador o rama a disco duro

git reset HEAD: mueve los archivos staged a unstaged.
a diferencia de git rm --cached no elimina el archivo

Comandos 
git clone url: copia desde un repositorio remoto EL directorio master y el repositorio
git push: Envia nuestro repositorio local el repositorio remoto
git fetch: Trae los cambios del repositorio remoto al local (para actualizar el directorio es necesario hacer un git merge)
git pull: combina las acciones de git fetch u git merge

git commit -a: fuciona los comandos git add y git commit (siempre y cuando existan en el repositorio)
git brach <rama> crea la una nueva rama a partir del commit actual
git checkout <rama> ir a la rama
HEAD apuntuador de la rama actual

git branch: ver las ramas
git merge <rama*> "mensaje": trae los cambios de rama* a rama actual


Soluci√≥n de conflictos:
Simbolos de conflictos:
<<<<<< HEAD
		conflicto rama actual
========
>>>>>> branch merged
		conflicto rama merged 
VSC: Links de correccion automatica: Accept Current Change Accept Incoming Change Accept Both Changes 